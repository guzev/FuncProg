Left Identity: return a >>= f = f a
return a >>= f 
= Optional (Just (Just a)) >>= f -- return 
= f a -- bind-Optional(Just (Just a)) 


Right Identity: m >>= return = m
m = Optional Nothing: 
Optional Nothing >>= _ = Optional Nothing -- bind-Optional Noting 

m = Optional $ Just Nothing: 
Optional (Just Nothing) >>= _ = Optional (Just Nothing) -- bind-Optional (Just Nothing)

m = Optional (Just (Just a)) >>= return 
= return a --bing-Optional (Just (Just a)) 
= Optional (Just (Just a)) --return


Associativity: (m >>= f) >>= g = m >>= (\x -> f x >>= g)
m = Optional Nothing: 
(Optional Nothing >>= f) >>= g 
= Optional Nothing >>= g --bind-Optional Nothing 
= Optional Nothing --bind-Optional Nothing 

Optional Nothing >>= _ = Optional Nothing --bind-Optional Nothing

m = Optional (Just Nothing): (Optional (Just Nothing) >>= f) >>= g 
= Optional (Just Nothing) >>= g --bind-Optional (Just Nothing) 
= Optional $ Just Nothing --bind-Optional (Just Nothing) 

Optional (Just Nothing) >>= _ = Optional (Just Nothing) --bind-Optional (Just Nothing)

m = Optional (Just (Just a)): 
(Optional (Just (Just a)) >>= f) >>= g 
= f a >>= g --bind-Optional (Just (Just a)) 

Optional (Just (Just a)) >>= (\x -> f x >>= g) 
= (\x -> f x >>= g) a --bind-Optional (Just (Just a)) 
= f a >>= g --function application